Agile Development places a high priority on providing customers with value by attending to their requirements 
and preferences while guarantees that the most important features are produced first and that iterative changes 
are driven by customer feedback by dividing work down into small, manageable tasks. However, it lacks of 
predictability so that project timeframes and outcomes might be difficult to predict with accuracy due to 
Agile iterative and incremental methodology. Stakeholders who need set budgets or timeframes may find this 
unpredictability troublesome. Additionally, planning, coordinating, and communicating take more time and effort 
when using agile frameworks like Scrum. This overhead can take a lot of time, especially for projects with short 
deadlines or small teams

The scrum master is the role responsible for gluing everything together and ensuring that scrum is being done well.
Scrum product owners understand the customer and business requirements, then create and manage the product backlog 
based on those requirements. Since agile teams are, by design, flexible and responsive, it is the responsibility of 
the product owner to ensure that they are delivering the most value.

3 types of meeting includes sprint planning, daily scrum and sprint review/retrospective. Sprint planning is to 
determine what work will be done in the upcoming sprint and how that work will be completed. Daily scrum is to inspect 
progress toward the sprint goal and adapt the plan for the next 24 hours, ensuring team alignment and identifying any obstacles.
The Sprint Review is where the team demonstrates the completed work and gathers feedback from stakeholders. The Sprint Retrospective 
is a follow-up meeting where the team reflects on what went well and what can be improved in the next sprint.

Epic
A big user story that needs to be broken down. Epics group together bugs, stories, and tasks to show the progress of a larger initiative.
In agile development, epics usually represent a significant deliverable, such as a new feature or experience in the software your team develops.
By default, software projects come with three standard work types:

Bug 
A bug is a problem which impairs or prevents the functions of a product.

Story
A user story is the smallest unit of work that needs to be done.

Task
A task represents work that needs to be done.